{"version":3,"sources":["Container/Buttons/styled.js","Container/Form/styled.js","Container/Form/index.js","Container/Header/styled.js","Container/Header/index.js","Container/Footer/styled.js","Container/Footer/index.js","Container/Section/styled.js","Container/Section/index.js","Container/Tasks/styled.js","Container/Tasks/index.js","Container/Buttons/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","GlobalStyle.js","index.js"],"names":["StyledButton","styled","button","complete","css","done","remove","selectAll","hideDone","form","StyledButtonSection","div","StyledForm","StyledInput","input","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trim","value","type","placeholder","onChange","target","ref","onClick","current","focus","StyledHeader","header","StyledTitle","h1","Header","title","StyledFooter","footer","Footer","year","name","StyledSection","section","StyledSectionHeader","StyledSubheader","h2","Section","additionalContent","body","StyledList","ul","StyledTask","li","hidden","StyledContent","p","Tasks","tasks","hideDoneTasks","removeTask","toggleDoneTask","map","task","id","className","content","Buttons","toggleHideDone","markAllTaskDone","length","disabled","every","some","StyledContainer","main","Container","children","App","setHideDoneTask","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.371f749a.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n    background-color: transparent;\r\n    border: none;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n\r\n    ${({ complete }) => complete && css`\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            color: hsl(0, 0%, 100%);\r\n            background-color: hsl(120, 100%, 35%);\r\n            border-radius: 15px;\r\n        }\r\n    `}\r\n\r\n    ${({ done }) => done && css`\r\n        background-color: hsl(120, 100%, 25%);\r\n        color: hsl(0, 0%, 100%);\r\n        border-radius: 15px;\r\n\r\n        &:hover {\r\n            background-color: hsl(120, 100%, 35%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            background-color: hsl(0, 100%, 50%);\r\n            color: white;\r\n            border-radius: 15px;\r\n        }\r\n\r\n        &:active {\r\n            color: hsl(0, 0%, 0%);\r\n        }\r\n    `}\r\n\r\n    ${({ selectAll }) => selectAll && css`\r\n        padding: 5px;\r\n        color: hsl(180, 100%, 25%);\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            color: hsl(180, 100%, 35%);\r\n        }\r\n\r\n        &:active {\r\n            color: hsl(0, 0%, 0%);\r\n        }\r\n\r\n        &:disabled {\r\n            color: hsl(0, 0%, 87%);\r\n            cursor: auto;\r\n        }\r\n    `}\r\n\r\n    ${({ hideDone }) => hideDone && css`\r\n        min-width: 127px;\r\n        padding: 5px;\r\n        color: hsl(180, 100%, 25%);\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            color: hsl(180, 100%, 35%);\r\n        }\r\n\r\n        &:disabled {\r\n            color: hsl(0, 0%, 87%);\r\n            cursor: auto;\r\n        }\r\n    `}\r\n\r\n    ${({ form }) => form && css`\r\n        background-color: hsl(180, 100%, 25%);\r\n        color: white;\r\n        border: none;\r\n        min-width: fit-content;\r\n        padding: 10px;\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            transform: scale(1.08);\r\n            background-color: hsl(180, 100%, 35%);\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const StyledButtonSection = styled.div`\r\n    display: flex;\r\n    gap: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin-bottom: 20px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    padding: 15px;\r\n    display: flex;\r\n    gap: 10px;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    padding: 10px;\r\n    width: 100%;\r\n    border: 2px solid hsl(0, 0%, 90%);\r\n`;","import { useRef, useState } from \"react\";\r\nimport { StyledButton } from \"../Buttons/styled\";\r\nimport { StyledForm, StyledInput } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    const focusInput = () => {\r\n      inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <StyledInput\r\n                value={newTaskContent}\r\n                type=\"text\"\r\n                placeholder=\"What is to do?\"\r\n                onChange={(event) => setNewTaskContent(event.target.value)}\r\n                ref={inputRef}\r\n            />\r\n            <StyledButton\r\n                form\r\n                type=\"submit\"\r\n                onClick={focusInput}\r\n            >\r\n                Add Task\r\n            </StyledButton>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    background-color: inherit;\r\n    width: 100%;\r\n    padding: 10px 0;\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n    margin: 0;\r\n`;","import { StyledHeader, StyledTitle } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>\r\n        <StyledTitle>{title}</StyledTitle>\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n    text-align: center;\r\n`;","import { StyledFooter } from \"./styled\";\r\n\r\n\r\nconst Footer = ({year, name}) => (\r\n    <StyledFooter>\r\n        {`Coded by`} {name} &copy; {year}\r\n    </StyledFooter>\r\n);\r\n\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: hsl(0, 0%, 100%);\r\n    margin: 20px auto;\r\n`;\r\n\r\nexport const StyledSectionHeader = styled.header`\r\n    border-bottom: 2px solid hsl(0, 0%, 90%);\r\n    display: flex;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-direction: column;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport const StyledSubheader = styled.h2`\r\n    margin: 5px 0;\r\n    padding: 15px;\r\n    flex-grow: 1;\r\n`;","import { StyledSection, StyledSectionHeader, StyledSubheader } from \"./styled\";\r\n\r\nconst Section = ({ title, additionalContent, body }) => (\r\n    <StyledSection>\r\n        <StyledSectionHeader>\r\n            <StyledSubheader>{title}</StyledSubheader>\r\n            {additionalContent}\r\n        </StyledSectionHeader>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledList = styled.ul`\r\n    padding: 10px;\r\n    list-style-type: none;\r\n`;\r\n\r\nexport const StyledTask = styled.li`\r\n    align-items: center;\r\n    display: flex;\r\n    padding: 5px;\r\n    margin-top: 10px;\r\n    border-bottom: 1px solid hsl(0, 0%, 87%);\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const StyledContent = styled.p`\r\n    padding: 0 10px;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    word-break: break-word;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;","import { StyledButton } from \"../Buttons/styled\";\r\nimport { StyledContent, StyledList, StyledTask } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDoneTasks, removeTask, toggleDoneTask }) => (\r\n    <StyledList>\r\n        {tasks.map(task => (\r\n            <StyledTask\r\n                key={task.id}\r\n                hidden={task.done && hideDoneTasks}\r\n            >\r\n                <StyledButton\r\n                    onClick={() => toggleDoneTask(task.id)}\r\n                    done={task.done}\r\n                    complete\r\n                >\r\n                    <i\r\n                        className=\"material-icons md-24\"\r\n                    >\r\n                        task_alt\r\n                    </i>\r\n                </StyledButton>\r\n                <StyledContent\r\n                    done={task.done}>\r\n                    {task.content}\r\n                </StyledContent>\r\n                <StyledButton\r\n                    onClick={() => removeTask(task.id)}\r\n                    remove\r\n                >\r\n                    <i\r\n                        className=\"material-icons md-24\"\r\n                    >\r\n                        delete\r\n                    </i>\r\n                </StyledButton>\r\n            </StyledTask>\r\n        ))}\r\n    </StyledList >\r\n);\r\n\r\nexport default Tasks;","import { StyledButton, StyledButtonSection } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDoneTasks, toggleHideDone, markAllTaskDone }) => {\r\n\r\n    if (tasks.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledButtonSection>\r\n            <StyledButton\r\n                onClick={markAllTaskDone}\r\n                disabled={(tasks.every(({ done }) => done))}\r\n                selectAll\r\n            >\r\n                Mark all as done\r\n            </StyledButton>\r\n            <StyledButton\r\n                onClick={toggleHideDone}\r\n                hideDone\r\n            >\r\n                {tasks.some(({done}) => done) && hideDoneTasks ? \"Show\" : \"Hide\"} done\r\n            </StyledButton>\r\n        </StyledButtonSection>\r\n    );\r\n};\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    max-width: 1024px;\r\n\r\n    @media (max-width: 767px) {\r\n        max-width: 100%;\r\n    }\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import { useState } from \"react\";\r\n\r\nimport Form from \"./Container/Form\";\r\nimport Header from \"./Container/Header\";\r\nimport Footer from \"./Container/Footer\";\r\nimport Section from \"./Container/Section\";\r\nimport Tasks from \"./Container/Tasks\";\r\nimport Buttons from \"./Container/Buttons\";\r\nimport Container from \"./Container\";\r\nimport { useTasks } from \"./useTasks\";\r\n\r\nfunction App() {\r\n  let [hideDoneTasks, setHideDoneTask] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDoneTask(hideDoneTasks = !hideDoneTasks);\r\n  };\r\n\r\n  const {\r\n    tasks,\r\n    addNewTask,\r\n    removeTask,\r\n    markAllTaskDone,\r\n    toggleDoneTask\r\n  } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Task List\" />\r\n      <Section\r\n        title=\"Add task\"\r\n        body=\r\n        {<Form\r\n          addNewTask={addNewTask}\r\n        />}\r\n      />\r\n      <Section\r\n        title=\"List of tasks\"\r\n        body={\r\n          <Tasks\r\n            toggleDoneTask={toggleDoneTask}\r\n            removeTask={removeTask}\r\n            tasks={tasks}\r\n            hideDoneTasks={hideDoneTasks}\r\n          />}\r\n        additionalContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDoneTasks={hideDoneTasks}\r\n            toggleHideDone={toggleHideDone}\r\n            markAllTaskDone={markAllTaskDone}\r\n          />}\r\n      />\r\n      <Footer name=\"Patryk Krawczyk\" year=\"2021\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n\r\n    const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"storedTasks\")) || []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"storedTasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleDoneTask = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n\r\n            return task;\r\n        }));\r\n    };\r\n\r\n    const markAllTaskDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (newTaskContent) => {\r\n        if (newTaskContent === \"\") {\r\n            return;\r\n        }\r\n        return (\r\n            setTasks(tasks => ([\r\n                ...tasks,\r\n                {\r\n                    content: newTaskContent,\r\n                    done: false,\r\n                    id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n                },\r\n            ]))\r\n        );\r\n    };\r\n\r\n    return {\r\n        tasks,\r\n        addNewTask,\r\n        removeTask,\r\n        markAllTaskDone,\r\n        toggleDoneTask,\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        background-color: hsl(0, 0%, 95%);\r\n        box-sizing: border-box;  \r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Lato', sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { GlobalStyle } from './GlobalStyle';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}