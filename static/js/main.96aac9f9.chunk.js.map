{"version":3,"sources":["GlobalStyle.js","Buttons/styled.js","Form/styled.js","Form/index.js","Header/styled.js","Header/index.js","Footer/styled.js","Footer/index.js","Section/styled.js","Section/index.js","Tasks/styled.js","Tasks/index.js","Buttons/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","theme","color","platinum","StyledButton","styled","button","complete","css","white","green","done","remove","red","black","selectAll","teal","grey","hideDone","form","StyledButtonSection","div","breakpoint","mobileMax","StyledForm","StyledInput","input","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trim","current","focus","autoFocus","value","type","placeholder","onChange","target","ref","StyledHeader","header","StyledTitle","h1","Header","title","StyledFooter","footer","Footer","year","name","StyledSection","section","StyledSectionHeader","StyledSubheader","h2","Section","additionalContent","body","StyledList","ul","StyledTask","li","hidden","StyledContent","p","Tasks","tasks","hideDoneTasks","removeTask","toggleDoneTask","map","task","onClick","id","className","content","Buttons","toggleHideDone","markAllTaskDone","length","disabled","every","some","StyledContainer","main","maxWidth","Container","children","App","setHideDoneTask","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96aac9f9.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        background-color: ${({ theme }) => theme.color.platinum};\r\n        box-sizing: border-box;  \r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Lato', sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n    background-color: transparent;\r\n    border: none;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n\r\n    ${({ complete }) => complete && css`\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            color: ${({ theme }) => theme.color.white};\r\n            background-color: ${({ theme }) => theme.color.green};\r\n            border-radius: 15px;\r\n        }\r\n    `}\r\n\r\n    ${({ done }) => done && css`\r\n        background-color: ${({ theme }) => theme.color.green};\r\n        color: ${({ theme }) => theme.color.white};\r\n        border-radius: 15px;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            background-color: ${({ theme }) => theme.color.red};\r\n            color: ${({ theme }) => theme.color.white};\r\n            border-radius: 15px;\r\n        }\r\n\r\n        &:active {\r\n            color: ${({ theme }) => theme.color.black};\r\n        }\r\n    `}\r\n\r\n    ${({ selectAll }) => selectAll && css`\r\n        padding: 5px;\r\n        color: ${({ theme }) => theme.color.teal};\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n\r\n        &:active {\r\n            color: ${({ theme }) => theme.color.black};\r\n        }\r\n\r\n        &:disabled {\r\n            color: ${({ theme }) => theme.color.grey};\r\n            cursor: auto;\r\n        }\r\n    `}\r\n\r\n    ${({ hideDone }) => hideDone && css`\r\n        min-width: 127px;\r\n        padding: 5px;\r\n        color: ${({ theme }) => theme.color.teal};\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n\r\n        &:active {\r\n            color: ${({ theme }) => theme.color.black};\r\n        }\r\n\r\n        &:disabled {\r\n            color: ${({ theme }) => theme.color.grey};\r\n            cursor: auto;\r\n        }\r\n    `}\r\n\r\n    ${({ form }) => form && css`\r\n        background-color: ${({ theme }) => theme.color.teal};\r\n        color: ${({ theme }) => theme.color.white};\r\n        border: none;\r\n        min-width: fit-content;\r\n        padding: 10px;\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            transform: scale(1.08);\r\n            filter: brightness(110%);\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const StyledButtonSection = styled.div`\r\n    display: flex;\r\n    gap: 20px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin-bottom: 20px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    padding: 15px;\r\n    display: flex;\r\n    gap: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    padding: 10px;\r\n    width: 100%;\r\n    border: 2px solid ${({ theme }) => theme.color.platinum};\r\n`;","import { useRef, useState } from \"react\";\r\nimport { StyledButton } from \"../Buttons/styled\";\r\nimport { StyledForm, StyledInput } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <StyledInput\r\n                autoFocus\r\n                value={newTaskContent}\r\n                type=\"text\"\r\n                placeholder=\"What is to do?\"\r\n                onChange={(event) => setNewTaskContent(event.target.value)}\r\n                ref={inputRef}\r\n            />\r\n            <StyledButton form type=\"submit\">\r\n                Add Task\r\n            </StyledButton>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    background-color: inherit;\r\n    width: 100%;\r\n    padding: 10px 0;\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n    margin: 0;\r\n`;","import { StyledHeader, StyledTitle } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>\r\n        <StyledTitle>{title}</StyledTitle>\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n    text-align: center;\r\n`;","import { StyledFooter } from \"./styled\";\r\n\r\n\r\nconst Footer = ({year, name}) => (\r\n    <StyledFooter>\r\n        {`Coded by`} {name} &copy; {year}\r\n    </StyledFooter>\r\n);\r\n\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: ${({ theme }) => theme.color.white};\r\n    margin: 20px auto;\r\n`;\r\n\r\nexport const StyledSectionHeader = styled.header`\r\n    border-bottom: 2px solid ${({ theme }) => theme.color.platinum};\r\n    display: flex;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        flex-direction: column;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport const StyledSubheader = styled.h2`\r\n    margin: 5px 0;\r\n    padding: 15px;\r\n    flex-grow: 1;\r\n`;","import { StyledSection, StyledSectionHeader, StyledSubheader } from \"./styled\";\r\n\r\nconst Section = ({ title, additionalContent, body }) => (\r\n    <StyledSection>\r\n        <StyledSectionHeader>\r\n            <StyledSubheader>{title}</StyledSubheader>\r\n            {additionalContent}\r\n        </StyledSectionHeader>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledList = styled.ul`\r\n    padding: 10px;\r\n    list-style-type: none;\r\n`;\r\n\r\nexport const StyledTask = styled.li`\r\n    align-items: center;\r\n    display: flex;\r\n    padding: 5px;\r\n    margin-top: 10px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.color.grey};\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const StyledContent = styled.p`\r\n    padding: 0 10px;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    word-break: break-word;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;","import { StyledButton } from \"../Buttons/styled\";\r\nimport { StyledContent, StyledList, StyledTask } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDoneTasks, removeTask, toggleDoneTask }) => (\r\n    <StyledList>\r\n        {tasks.map(task => (\r\n            <StyledTask\r\n                key={task.id}\r\n                hidden={task.done && hideDoneTasks}\r\n            >\r\n                <StyledButton\r\n                    onClick={() => toggleDoneTask(task.id)}\r\n                    done={task.done}\r\n                    complete\r\n                >\r\n                    <i\r\n                        className=\"material-icons md-24\"\r\n                    >\r\n                        task_alt\r\n                    </i>\r\n                </StyledButton>\r\n                <StyledContent\r\n                    done={task.done}>\r\n                    {task.content}\r\n                </StyledContent>\r\n                <StyledButton\r\n                    onClick={() => removeTask(task.id)}\r\n                    remove\r\n                >\r\n                    <i\r\n                        className=\"material-icons md-24\"\r\n                    >\r\n                        delete\r\n                    </i>\r\n                </StyledButton>\r\n            </StyledTask>\r\n        ))}\r\n    </StyledList >\r\n);\r\n\r\nexport default Tasks;","import { StyledButton, StyledButtonSection } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDoneTasks, toggleHideDone, markAllTaskDone }) => {\r\n\r\n    if (tasks.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledButtonSection>\r\n            <StyledButton\r\n                onClick={markAllTaskDone}\r\n                disabled={(tasks.every(({ done }) => done))}\r\n                selectAll\r\n            >\r\n                Mark all as done\r\n            </StyledButton>\r\n            <StyledButton\r\n                onClick={toggleHideDone}\r\n                hideDone\r\n            >\r\n                {tasks.some(({done}) => done) && hideDoneTasks ? \"Show\" : \"Hide\"} done\r\n            </StyledButton>\r\n        </StyledButtonSection>\r\n    );\r\n};\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    max-width: ${({ theme }) => theme.breakpoint.maxWidth}px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        max-width: 100%;\r\n    }\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import { useState } from \"react\";\r\nimport { useTasks } from \"./useTasks\";\r\n\r\nimport Form from \"./Form\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Section from \"./Section\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Container from \"./Container\";\r\n\r\n\r\nfunction App() {\r\n  let [hideDoneTasks, setHideDoneTask] = useState(false);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDoneTask(hideDoneTasks = !hideDoneTasks);\r\n  };\r\n\r\n  const {\r\n    tasks,\r\n    addNewTask,\r\n    removeTask,\r\n    markAllTaskDone,\r\n    toggleDoneTask\r\n  } = useTasks();\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Task List\" />\r\n      <Section\r\n        title=\"Add task\"\r\n        body=\r\n        {<Form\r\n          addNewTask={addNewTask}\r\n        />}\r\n      />\r\n      <Section\r\n        title=\"List of tasks\"\r\n        body={\r\n          <Tasks\r\n            toggleDoneTask={toggleDoneTask}\r\n            removeTask={removeTask}\r\n            tasks={tasks}\r\n            hideDoneTasks={hideDoneTasks}\r\n          />}\r\n        additionalContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDoneTasks={hideDoneTasks}\r\n            toggleHideDone={toggleHideDone}\r\n            markAllTaskDone={markAllTaskDone}\r\n          />}\r\n      />\r\n      <Footer name=\"Patryk Krawczyk\" year=\"2021\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n\r\n    const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"storedTasks\")) || []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"storedTasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleDoneTask = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n\r\n            return task;\r\n        }));\r\n    };\r\n\r\n    const markAllTaskDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (newTaskContent) => {\r\n        if (newTaskContent === \"\") {\r\n            return;\r\n        }\r\n        return (\r\n            setTasks(tasks => ([\r\n                ...tasks,\r\n                {\r\n                    content: newTaskContent,\r\n                    done: false,\r\n                    id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n                },\r\n            ]))\r\n        );\r\n    };\r\n\r\n    return {\r\n        tasks,\r\n        addNewTask,\r\n        removeTask,\r\n        markAllTaskDone,\r\n        toggleDoneTask,\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { GlobalStyle } from './GlobalStyle';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { theme } from './theme';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme} />\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n    color: {\r\n        white: \"#fff\",\r\n        platinum: \"#E6E6E6\",\r\n        green: \"#00B300\",\r\n        red: \"#FF0000\",\r\n        black: \"#000000\",\r\n        teal: \"#008080\",\r\n        grey: \"#DEDEDE\"\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n        maxWidth: 1280,\r\n    },\r\n};\r\n"],"sourceRoot":""}