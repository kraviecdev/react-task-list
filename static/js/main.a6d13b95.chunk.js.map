{"version":3,"sources":["reportWebVitals.js","common/Menu/menuSlice.js","common/Header/styled.js","common/Header/index.js","common/Footer/styled.js","common/Footer/index.js","common/Buttons/styled.js","features/tasks/tasksLocalStorage.js","features/tasks/tasksSlice.js","features/tasks/Form/styled.js","features/tasks/Form/index.js","common/Section/styled.js","common/Section/index.js","common/Container/styled.js","common/Container/index.js","features/tasks/TasksList/styled.js","features/tasks/TasksList/index.js","common/Buttons/index.js","features/tasks/Tasks.js","common/ThemeSwitch/themeSlice.js","common/ThemeSwitch/styled.js","common/ThemeSwitch/index.js","common/Burger/styled.js","common/Burger/index.js","common/Menu/styled.js","common/Menu/index.js","common/Paragraph/styled.js","common/Paragraph/index.js","features/tools/Library/styled.js","features/tools/Library/Index.js","features/tools/AppInfo/styled.js","features/tools/AppInfo/index.js","features/tools/ApplicationInfo.js","features/author/Author/PK.png","features/author/Author/styled.js","features/author/Author/index.js","features/author/About.js","theme.js","GlobalStyle.js","App.js","features/tasks/getExampleTasks.js","features/tasks/tasksSaga.js","rootSaga.js","store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","menuSlice","createSlice","name","initialState","isMenuOpen","reducers","toggleMenuState","state","actions","selectIsMenuOpen","menu","selectMenuState","StyledHeader","styled","header","StyledTitle","h1","theme","breakpoints","medium","active","css","Header","title","navigation","useSelector","StyledFooter","footer","colors","colorPrimary","backgroundPrimary","StyledFooterWrapper","div","StyledFooterHeader","h4","StyledLink","a","buttonPrimary","StyledAbout","p","StyledSocialList","ul","StyledSocial","li","GithubIcon","Github","LinkedInIcon","Linkedin","Footer","href","StyledButton","button","complete","buttonMarkAsDone","done","remove","buttonDelete","standard","colorSeconadry","hideDone","form","StyledButtonSection","localStorageKey","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","tasksSlice","parse","getItem","newTaskContent","addTasks","task","payload","push","toggleHideDone","toggleTaskDone","taskId","taskIndex","findIndex","id","removeTask","splice","markAllTaskDone","map","handleNewTaskContent","action","fetchExampleTasks","setTasks","selectTasksState","selectTasks","selectHideDone","selectNewTaskContent","selectIsListEmpty","length","selectAreAllTasksDone","every","selectIsAnyTaskDone","find","StyledForm","StyledInput","input","backgroundAddPrimary","Form","inputRef","useRef","trimmedNewTaskConent","trim","dispatch","useDispatch","onSubmit","event","preventDefault","content","nanoid","current","focus","autoFocus","value","type","placeholder","onChange","target","ref","StyledSection","section","additionalSection","StyledSectionHeader","StyledSubheader","h2","Section","additionalContent","body","StyledContainer","main","extraLarge","Container","children","StyledList","StyledTask","hidden","StyledContent","TasksList","onClick","className","Buttons","isListEmpty","areEveryTasksDone","isAnyTaskDone","disabled","Tasks","themeSlice","isDarkTheme","toggleTheme","selectIsDarkTheme","selectThemeState","Button","Info","SwitchBody","span","IconBody","ThemeSwitch","StyledBurger","StyledBurgerSwitch","Burger","StyledMenu","nav","StyledNavBox","StyledNavItemBox","StyledNavLink","NavLink","Menu","home","tools","about","StyledParagraph","StyledParagraphLink","Paragraph","description","StyledLibraryContainer","StyledLibrary","StyledFrontLibrary","StyledBackLibrabry","StyledLibraryName","StyledLibraryInfo","ReactIcon","ReactLogo","ReduxIcon","Redux","RouterIcon","Reactrouter","PagesIcon","Githubpages","StyledComponentsIcon","Styledcomponents","Library","paragraph","icon","StyledLibrariesContainer","AppInfo","ApplicationInfo","StyledImg","img","StyledAuthorInfo","StyledAuthorContainer","Author","src","personalImage","alt","About","light","dark","GlobalStyle","createGlobalStyle","App","to","path","getExampleTasks","fetch","response","ok","Error","statusText","json","fetchExampleTasksHandler","saveTasksInLocalStorageHandler","tasksSaga","call","exampleTasks","put","alert","select","takeLatest","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","themeReducer","menuReducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6d13b95.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst menuSlice = createSlice({\r\n    name: 'menu',\r\n    initialState: {\r\n        isMenuOpen: false,\r\n    },\r\n    reducers: {\r\n        toggleMenuState: (state) => {\r\n            state.isMenuOpen = !state.isMenuOpen;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { toggleMenuState } = menuSlice.actions;\r\nconst selectMenuState = state => state.menu;\r\n\r\nexport const selectIsMenuOpen = state => selectMenuState(state).isMenuOpen;\r\n\r\nexport default menuSlice.reducer;","import styled from \"styled-components\";\r\nimport { css } from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 12px;\r\n    background-color: inherit;\r\n    margin: 0 auto;\r\n    min-height: 61px;\r\n    width: 100%;\r\n    max-width: 1420px;\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n    display: none;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.medium}px){\r\n        ${({ active }) => active && css`\r\n        margin: 0;\r\n        display: block;\r\n    `}\r\n    }\r\n    \r\n`;","import { useSelector } from \"react-redux\";\r\nimport { selectIsMenuOpen } from \"../Menu/menuSlice\";\r\nimport { StyledHeader, StyledTitle } from \"./styled\";\r\n\r\nconst Header = ({ title, navigation }) => {\r\n    const isMenuOpen = useSelector(selectIsMenuOpen); \r\n\r\n    return (\r\n        <StyledHeader>\r\n            <StyledTitle active={!isMenuOpen} >{title}</StyledTitle>\r\n            {navigation}\r\n        </StyledHeader>\r\n    )\r\n};\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\nimport { Github } from \"@styled-icons/bootstrap/Github\";\r\nimport { Linkedin } from \"@styled-icons/bootstrap/Linkedin\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n    width: 100%;\r\n    color: ${({ theme }) => theme.colors.colorPrimary};\r\n    background: ${({ theme }) => theme.colors.backgroundPrimary};\r\n`;\r\n\r\nexport const StyledFooterWrapper = styled.div`\r\n    max-width: 1420px;\r\n    margin: 30px auto 0;\r\n    padding: 12px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.medium}px){\r\n        max-width: 100%;\r\n        padding: 12px;\r\n    }\r\n`;\r\n\r\nexport const StyledFooterHeader = styled.h4`\r\n    font-size: 16px;\r\n    margin: 10 0px;\r\n    font-weight: normal;\r\n    text-transform: uppercase;\r\n    opacity: 0;\r\n    animation: \r\n        shadeIn 4s infinite;\r\n\r\n    @keyframes  shadeIn {\r\n        from {\r\n            opacity: 0;\r\n            }\r\n        to {\r\n            opacity: 1;\r\n            }\r\n        }\r\n    \r\n    @media(max-width: ${({ theme }) => theme.breakpoints.medium}px){\r\n        font-size: 13px;\r\n    }\r\n`;\r\n\r\n\r\nexport const StyledLink = styled.a`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.colors.buttonPrimary};\r\n    transition: color 1s;\r\n\r\n    &:hover{\r\n        color: ${({ theme }) => theme.colors.colorPrimary};\r\n    }\r\n`;\r\n\r\nexport const StyledAbout = styled.p`\r\n    max-width: 60%;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.medium}px){\r\n        max-width: 100%;\r\n    }\r\n`;\r\n\r\nexport const StyledSocialList = styled.ul`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    list-style: none;\r\n    padding: 0;\r\n`;\r\n\r\nexport const StyledSocial = styled.li`\r\n    margin-right: 16px;\r\n`;\r\n\r\nexport const GithubIcon = styled(Github)`\r\n    width: 32px;\r\n    fill: ${({ theme }) => theme.colors.buttonPrimary};\r\n    transition: 1s;\r\n\r\n    &:hover{\r\n        fill: ${({ theme }) => theme.colors.colorPrimary};\r\n    }\r\n`;\r\n\r\nexport const LinkedInIcon = styled(Linkedin)`\r\n    width: 32px;\r\n    fill: ${({ theme }) => theme.colors.buttonPrimary};\r\n    transition: 1s;\r\n\r\n    &:hover{\r\n        fill: ${({ theme }) => theme.colors.colorPrimary};\r\n    }\r\n`;","import { StyledAbout, StyledLink, StyledFooter, StyledFooterHeader, StyledFooterWrapper, StyledSocial, StyledSocialList, GithubIcon, LinkedInIcon } from \"./styled\";\r\n\r\n\r\nconst Footer = () => (\r\n    <StyledFooter>\r\n        <StyledFooterWrapper>\r\n            <StyledAbout>\r\n                {`This project was created during the YouCode course. It covers all the techniques learned in this course. This project is made for practice only, not for profit. Creating web-pages and applications is my passion. If you want to check my work, below you can find more info.`}\r\n            </StyledAbout>\r\n            <StyledFooterHeader>Contact me if my work seems interesting to you!</StyledFooterHeader>\r\n            <StyledLink href=\"mailto:patrick36212@gmail.com\">\r\n                patrick36212@gmail.com\r\n            </StyledLink>\r\n            <StyledSocialList>\r\n                <StyledSocial>\r\n                    <StyledLink href=\"https://github.com/patrick36212\">\r\n                        <GithubIcon />\r\n                    </StyledLink>\r\n                </StyledSocial>\r\n                <StyledSocial>\r\n                    <StyledLink href=\"https://www.linkedin.com/in/patryk-krawczyk-b09413188\">\r\n                        <LinkedInIcon />\r\n                    </StyledLink>\r\n                </StyledSocial>\r\n            </StyledSocialList>\r\n            <StyledAbout>{`Coded by Patryk Krawczyk`} &copy; {2022}</StyledAbout>\r\n        </StyledFooterWrapper>\r\n    </StyledFooter>\r\n);\r\n\r\nexport default Footer;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n    color: ${({ theme }) => theme.colors.colorPrimary};\r\n    background-color: transparent;\r\n    border: none;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n\r\n    ${({ complete }) => complete && css`\r\n        transition: .7s;\r\n\r\n        &:hover {\r\n            color: ${({ theme }) => theme.colors.backgroundPrimary};\r\n            background-color: ${({ theme }) => theme.colors.buttonMarkAsDone};\r\n            border-radius: 15px;\r\n        }\r\n    `}\r\n\r\n    ${({ done }) => done && css`\r\n        background-color: ${({ theme }) => theme.colors.buttonMarkAsDone};\r\n        color: ${({ theme }) => theme.colors.backgroundPrimary};\r\n        border-radius: 15px;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            background-color: ${({ theme }) => theme.colors.buttonDelete};\r\n            color: ${({ theme }) => theme.colors.backgroundPrimary};\r\n            border-radius: 15px;\r\n        }\r\n\r\n        &:active {\r\n            color: ${({ theme }) => theme.colors.colorPrimary};\r\n        }\r\n    `}\r\n\r\n    ${({ standard }) => standard && css`\r\n        padding: 5px;\r\n        color: ${({ theme }) => theme.colors.buttonPrimary};\r\n        transition: 1s;\r\n        min-width: 127px;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n\r\n        &:active {\r\n            color: ${({ theme }) => theme.colors.colorPrimary};\r\n        }\r\n\r\n        &:disabled {\r\n            color: ${({ theme }) => theme.colors.colorSeconadry};\r\n            cursor: auto;\r\n        }\r\n    `}\r\n\r\n    ${({ hideDone }) => hideDone && css`\r\n        min-width: 127px;\r\n        padding: 5px;\r\n        color: ${({ theme }) => theme.colors.buttonPrimary};\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n\r\n        &:active {\r\n            color: ${({ theme }) => theme.colors.colorPrimary};\r\n        }\r\n\r\n        &:disabled {\r\n            color: ${({ theme }) => theme.colors.colorSeconadry};\r\n            cursor: auto;\r\n        }\r\n    `}\r\n\r\n    ${({ form }) => form && css`\r\n        background-color: ${({ theme }) => theme.colors.buttonPrimary};\r\n        color: ${({ theme }) => theme.colors.backgroundPrimary};\r\n        border: none;\r\n        min-width: fit-content;\r\n        padding: 10px;\r\n        transition: 1s;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            transform: scale(1.08);\r\n            filter: brightness(110%);\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const StyledButtonSection = styled.div`\r\n    display: flex;\r\n    gap: 20px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin-bottom: 20px;\r\n    }\r\n`;","const localStorageKey = \"tasks\";\r\n\r\nexport const saveTasksInLocalStorage = tasks => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(tasks));\r\n};\r\n\r\nexport const getTasksFromLocalStorage = () => \r\n    JSON.parse(localStorage.getItem(localStorageKey)) || [];","import { createSlice } from '@reduxjs/toolkit';\r\nimport { getTasksFromLocalStorage } from './tasksLocalStorage';\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n        tasks: getTasksFromLocalStorage(),\r\n        hideDone: false,\r\n        newTaskContent: \"\",\r\n    },\r\n    reducers: {\r\n        addTasks: ({ tasks }, { payload: task }) => {\r\n            tasks.push(task);\r\n        },\r\n        toggleHideDone: state => {\r\n            state.hideDone = !state.hideDone;\r\n        },\r\n        toggleTaskDone: ({ tasks }, { payload: taskId }) => {\r\n            const taskIndex = tasks.findIndex(({ id }) => id === taskId);\r\n            tasks[taskIndex].done = !tasks[taskIndex].done;\r\n        },\r\n        removeTask: ({ tasks }, { payload: taskId }) => {\r\n            const taskIndex = tasks.findIndex(({ id }) => id === taskId);\r\n            tasks.splice(taskIndex, 1)\r\n        },\r\n        markAllTaskDone: ({ tasks }) => {\r\n            tasks.map(task => task.done = true);\r\n        },\r\n        handleNewTaskContent: (state, action) => {\r\n            state.newTaskContent = action.payload;\r\n        },\r\n        fetchExampleTasks: () => { },\r\n        setTasks: (state, {payload: tasks}) => {\r\n            state.tasks = tasks;\r\n        },\r\n    }\r\n});\r\n\r\nexport const {\r\n    addTasks,\r\n    toggleHideDone,\r\n    toggleTaskDone,\r\n    removeTask,\r\n    markAllTaskDone,\r\n    handleNewTaskContent,\r\n    fetchExampleTasks,\r\n    setTasks,\r\n} = tasksSlice.actions;\r\n\r\nconst selectTasksState = state => state.tasks;\r\n\r\nexport const selectTasks = state => selectTasksState(state).tasks;\r\nexport const selectHideDone = state => selectTasksState(state).hideDone;\r\nexport const selectNewTaskContent = state => selectTasksState(state).newTaskContent;\r\nexport const selectIsListEmpty = state => selectTasks(state).length === 0;\r\nexport const selectAreAllTasksDone = state => selectTasks(state).every(({ done }) => done);\r\nexport const selectIsAnyTaskDone = state => selectTasks(state).find(({ done }) => done);\r\n\r\nexport default tasksSlice.reducer;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    padding: 15px;\r\n    display: flex;\r\n    gap: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    padding: 10px;\r\n    width: 100%;\r\n    border: 2px solid ${({ theme }) => theme.colors.backgroundAddPrimary};\r\n`;","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StyledButton } from \"../../../common/Buttons/styled\";\r\nimport { addTasks, selectNewTaskContent, handleNewTaskContent } from \"../tasksSlice\";\r\nimport { StyledForm, StyledInput } from \"./styled\";\r\n\r\nconst Form = () => {\r\n\r\n    const newTaskContent = useSelector(selectNewTaskContent);\r\n    const inputRef = useRef(null);\r\n    const trimmedNewTaskConent = newTaskContent.trim();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (trimmedNewTaskConent === \"\") {\r\n            return;\r\n        };\r\n        dispatch(addTasks({\r\n            content: trimmedNewTaskConent,\r\n            done: false,\r\n            id: nanoid(),\r\n        }));\r\n        dispatch(handleNewTaskContent(\"\"));\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <StyledInput\r\n                autoFocus\r\n                value={newTaskContent}\r\n                type=\"text\"\r\n                placeholder=\"What is to do?\"\r\n                onChange={({ target }) => dispatch(handleNewTaskContent(target.value))}\r\n                ref={inputRef}\r\n            />\r\n            <StyledButton form type=\"submit\">\r\n                Add Task\r\n            </StyledButton>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: ${({ theme }) => theme.colors.backgroundPrimary};\r\n    margin: 20px auto;\r\n\r\n    ${({ additionalSection }) => additionalSection && css`\r\n        background-color: transparent;\r\n    `};\r\n\r\n    \r\n    @keyframes fadeInLeft {\r\n        from {\r\n            opacity: 0;\r\n            transform: translate3d(-100%, 0, 0);\r\n        }\r\n        to {\r\n            opacity: 1;\r\n            transform: none;\r\n        }\r\n    };\r\n\r\n    @keyframes fadeInRight {\r\n        from {\r\n            opacity: 0;\r\n            transform: translate3d(100%, 0, 0);\r\n        }\r\n        to {\r\n            opacity: 1;\r\n            transform: none;\r\n        }\r\n    };\r\n\r\n    :nth-child(odd) {\r\n        animation: fadeInLeft .7s;\r\n    }\r\n\r\n    :nth-child(even) {\r\n        animation: fadeInRight .7s;\r\n    }\r\n`;\r\n\r\nexport const StyledSectionHeader = styled.header`\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.backgroundAddPrimary};\r\n    display: flex;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n        flex-direction: column;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport const StyledSubheader = styled.h2`\r\n    margin: 5px 0;\r\n    padding: 15px;\r\n    flex-grow: 1;\r\n`;","import { StyledSection, StyledSectionHeader, StyledSubheader } from \"./styled\";\r\n\r\nconst Section = ({ title, additionalContent, body }) => {\r\n    return (\r\n        <>\r\n            <StyledSection>\r\n                <StyledSectionHeader>\r\n                    <StyledSubheader>{title}</StyledSubheader>\r\n                    {additionalContent}\r\n                </StyledSectionHeader>\r\n                {body}\r\n            </StyledSection>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    min-height: calc(100vh - 375px);\r\n    margin: 0 auto;\r\n    padding: 20px 0;\r\n    max-width: ${({ theme }) => theme.breakpoints.extraLarge}px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n        max-width: 100%;\r\n    }\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledList = styled.ul`\r\n    padding: 10px;\r\n    list-style-type: none;\r\n`;\r\n\r\nexport const StyledTask = styled.li`\r\n    align-items: center;\r\n    display: flex;\r\n    padding: 5px;\r\n    margin-top: 10px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.colorSeconadry};\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const StyledContent = styled.p`\r\n    padding: 0 10px;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    word-break: break-word;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { StyledButton } from \"../../../common/Buttons/styled\";\r\nimport {\r\n    selectTasks,\r\n    toggleTaskDone,\r\n    removeTask,\r\n    selectHideDone\r\n} from \"../tasksSlice\";\r\nimport { StyledContent, StyledList, StyledTask } from \"./styled\";\r\n\r\nconst TasksList = () => {\r\n    const tasks = useSelector(selectTasks)\r\n    const hideDone = useSelector(selectHideDone)\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <StyledList>\r\n            {tasks.map(task => (\r\n                <StyledTask\r\n                    key={task.id}\r\n                    hidden={task.done && hideDone}\r\n                >\r\n                    <StyledButton\r\n                        onClick={() => dispatch(toggleTaskDone(task.id))}\r\n                        done={task.done}\r\n                        complete\r\n                    >\r\n                        <i\r\n                            className=\"material-icons md-24\"\r\n                        >\r\n                            task_alt\r\n                        </i>\r\n                    </StyledButton>\r\n                    <StyledContent\r\n                        done={task.done}>\r\n                        {task.content}\r\n                    </StyledContent>\r\n                    <StyledButton\r\n                        onClick={() => dispatch(removeTask(task.id))}\r\n                        remove\r\n                    >\r\n                        <i\r\n                            className=\"material-icons md-24\"\r\n                        >\r\n                            delete\r\n                        </i>\r\n                    </StyledButton>\r\n                </StyledTask>\r\n            ))}\r\n        </StyledList >\r\n    );\r\n};\r\n\r\nexport default TasksList;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    selectHideDone,\r\n    toggleHideDone,\r\n    markAllTaskDone,\r\n    selectIsListEmpty,\r\n    selectAreAllTasksDone,\r\n    selectIsAnyTaskDone,\r\n} from \"../../features/tasks/tasksSlice\";\r\nimport { StyledButton, StyledButtonSection } from \"./styled\";\r\n\r\nconst Buttons = () => {\r\n    const hideDone = useSelector(selectHideDone);\r\n    const isListEmpty = useSelector(selectIsListEmpty);\r\n    const areEveryTasksDone = useSelector(selectAreAllTasksDone);\r\n    const isAnyTaskDone = useSelector(selectIsAnyTaskDone);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <StyledButtonSection>\r\n            {!isListEmpty && (\r\n                <>\r\n                    <StyledButton\r\n                        onClick={() => dispatch(markAllTaskDone())}\r\n                        disabled={areEveryTasksDone}\r\n                        standard\r\n                    >\r\n                        Mark all as done\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        onClick={() => dispatch(toggleHideDone())}\r\n                        hideDone\r\n                        disabled={!isAnyTaskDone}\r\n                    >\r\n                        {isAnyTaskDone && hideDone ? \"Show\" : \"Hide\"} done\r\n                    </StyledButton>\r\n                </>)}\r\n        </StyledButtonSection>\r\n\r\n    );\r\n};\r\n\r\nexport default Buttons;","import Form from \"./Form\";\r\nimport Section from \"../../common/Section\";\r\nimport Container from \"../../common/Container\";\r\nimport TasksList from \"./TasksList\";\r\nimport Buttons from \"../../common/Buttons\";\r\nimport { StyledButton, StyledButtonSection } from \"../../common/Buttons/styled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchExampleTasks } from \"./tasksSlice\";\r\n\r\nconst Tasks = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Container>\r\n      <Section\r\n        title=\"Add task\"\r\n        body={<Form />}\r\n        additionalContent={\r\n          <StyledButtonSection>\r\n            <StyledButton\r\n              standard\r\n              onClick={() => dispatch(fetchExampleTasks())}\r\n            >\r\n              Example Tasks\r\n            </StyledButton>\r\n          </StyledButtonSection>\r\n        }\r\n      />\r\n      <Section\r\n        title=\"List of tasks\"\r\n        body={<TasksList />}\r\n        additionalContent={<Buttons />}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst themeSlice = createSlice({\r\n    name: 'theme',\r\n    initialState: {\r\n        isDarkTheme: false,\r\n    },\r\n    reducers: {\r\n        toggleTheme: state => {\r\n            state.isDarkTheme = !state.isDarkTheme;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    toggleTheme\r\n} = themeSlice.actions;\r\n\r\nconst selectThemeState = state => state.theme;\r\n\r\nexport const selectIsDarkTheme = state => selectThemeState(state).isDarkTheme;\r\n\r\nexport default themeSlice.reducer;","import styled, { css } from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    border: none;\r\n    background: transparent;\r\n    color: inherit;\r\n    padding: 0px;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  line-height: 1.3;\r\n  margin: 0px 12px 0px 0px;\r\n  text-transform: uppercase;\r\n  display: block;\r\n`;\r\n\r\nexport const SwitchBody = styled.span`\r\n  width: 47px;\r\n  padding: 2.5px;\r\n  border-radius: 15px;\r\n  background: ${({ theme }) => theme.colors.backgroundPrimary};\r\n  border: 1px solid;\r\n  transition: background .3s;\r\n`;\r\n\r\nexport const IconBody = styled.span`\r\n  background: ${({ theme }) => theme.colors.buttonPrimary};  \r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 22px;\r\n  height: 22px;\r\n  border-radius: 50%;\r\n  transition: transform .3s, background .3s;\r\n  \r\n  ${({ active }) => active && css`\r\n    transform: translateX(20px);\r\n  `}\r\n`;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleTheme, selectIsDarkTheme } from \"./themeSlice\";\r\nimport { Button, Info, SwitchBody, IconBody} from \"./styled\";\r\n\r\nconst ThemeSwitch = () => {\r\n  const isDarkTheme = useSelector(selectIsDarkTheme);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n      <Button\r\n        onClick={() => dispatch(toggleTheme())}\r\n      >\r\n        <Info>\r\n          Dark mode {isDarkTheme ? \"on\" : \"off\"}\r\n        </Info>\r\n        <SwitchBody>\r\n          <IconBody\r\n            active={isDarkTheme}\r\n          >\r\n          </IconBody>\r\n        </SwitchBody>\r\n      </Button>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitch;","import styled from \"styled-components\";\r\n\r\nexport const StyledBurger = styled.button`\r\n    display: none;\r\n    \r\n    @media(max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n      position: absolute;\r\n      top: 14px;\r\n      right: 14px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-around;\r\n      width: 32px;\r\n      height: 32px;\r\n      background: transparent;\r\n      border: none;\r\n      cursor: pointer;\r\n      padding: 0;\r\n      z-index: 2;\r\n      \r\n      &:focus {\r\n          outline: none;\r\n      }\r\n    }\r\n`;\r\n\r\nexport const StyledBurgerSwitch = styled.div`\r\n    width: 32px;\r\n    height: 4px;\r\n    background: ${({theme}) => theme.colors.colorPrimary};\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    :first-child {\r\n      transform: ${({ active }) => active ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ active }) => active ? '0' : '1'};\r\n      transform: ${({ active }) => active ? 'translateX(20px)' : 'translateX(0)'};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ active }) => active ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n`","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIsMenuOpen, toggleMenuState } from \"../Menu/menuSlice\";\r\nimport { StyledBurger, StyledBurgerSwitch } from \"./styled\";\r\n\r\nconst Burger = () => {\r\n    const isMenuOpen = useSelector(selectIsMenuOpen);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <StyledBurger\r\n            onClick={() => dispatch(toggleMenuState())}\r\n        >\r\n            <StyledBurgerSwitch\r\n                active={isMenuOpen}\r\n            />\r\n            <StyledBurgerSwitch\r\n                active={isMenuOpen}\r\n            />\r\n            <StyledBurgerSwitch\r\n                active={isMenuOpen}\r\n            />\r\n        </StyledBurger>\r\n    )\r\n};\r\n\r\nexport default Burger;","import { css } from \"styled-components\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const StyledMenu = styled.nav`\r\n    padding: 20px 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    transition: transform 0.3s ease-in-out;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.medium}px){\r\n        transform: translateY(-100%);\r\n        width: 100%;\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        z-index: 1;\r\n        background: ${({ theme }) => theme.colors.backgroundPrimary};\r\n\r\n        ${({ active }) => active && css`\r\n        transform: translateY(0);\r\n        `}\r\n    }\r\n`;\r\n\r\nexport const StyledNavBox = styled.div`\r\n    display: inherit;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    \r\n    @media(max-width: ${({ theme }) => theme.breakpoints.medium}px){\r\n        flex-direction: column; \r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const StyledNavItemBox = styled.span`\r\n    padding: 0 7px;\r\n    transition: 1.2s;\r\n\r\n    &:hover {\r\n        color: ${({ theme }) => theme.colors.colorPrimary};\r\n    }\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.medium}px){\r\n        display: flex;\r\n        flex-grow: 1;\r\n        justify-content: center;\r\n        padding: 12px 0;\r\n    }\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.colors.buttonPrimary};\r\n    transition: .7s;\r\n\r\n    &:hover{\r\n        color: ${({ theme }) => theme.colors.colorPrimary};\r\n    };\r\n\r\n    ${({ header }) => header && css`\r\n        font-size: 32px;\r\n        color: ${({ theme }) => theme.colors.colorPrimary};\r\n\r\n        &:hover {\r\n            color: ${({ theme }) => theme.colors.buttonPrimary};\r\n        }\r\n    `}\r\n`;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIsMenuOpen, toggleMenuState } from \"./menuSlice\";\r\n\r\nimport ThemeSwitch from \"../ThemeSwitch\";\r\nimport Burger from \"../Burger\";\r\nimport { StyledMenu, StyledNavBox, StyledNavItemBox } from \"./styled\";\r\n\r\nconst Menu = ({ title, home, tools, about }) => {\r\n    const isMenuOpen = useSelector(selectIsMenuOpen);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            <Burger />\r\n            <StyledMenu\r\n                active={isMenuOpen}\r\n            >\r\n                <StyledNavBox>\r\n                    <StyledNavItemBox onClick={() => dispatch(toggleMenuState())}>{title}</StyledNavItemBox>\r\n                    <StyledNavItemBox onClick={() => dispatch(toggleMenuState())}>{home}</StyledNavItemBox>\r\n                    <StyledNavItemBox onClick={() => dispatch(toggleMenuState())}>{about}</StyledNavItemBox>\r\n                    <StyledNavItemBox onClick={() => dispatch(toggleMenuState())}>{tools}</StyledNavItemBox>\r\n                    <StyledNavItemBox onClick={() => dispatch(toggleMenuState())} ><ThemeSwitch /></StyledNavItemBox>\r\n                </StyledNavBox>\r\n            </StyledMenu>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Menu;","import styled from \"styled-components\";\r\n\r\nexport const StyledParagraph = styled.p`\r\n    margin: 0;\r\n    padding: 10px 15px;\r\n    text-align: justify;\r\n    font-size: 20px;\r\n    white-space: break-spaces;\r\n    line-height: 32px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n        font-size: 14px;\r\n        line-height: 26px;\r\n    }\r\n`;\r\n\r\nexport const StyledParagraphLink = styled.a`\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    color: ${({ theme }) => theme.colors.buttonPrimary};\r\n    transition: .7s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: ${({ theme }) => theme.colors.colorPrimary};\r\n    };\r\n`;","import { StyledParagraph } from \"./styled\";\r\n\r\nconst Paragraph = ({ description }) => (\r\n    <StyledParagraph>{description}</StyledParagraph>\r\n);\r\n\r\nexport default Paragraph;","import styled from \"styled-components\";\r\nimport { ReactLogo } from \"@styled-icons/fa-brands/ReactLogo\";\r\nimport { Redux } from \"@styled-icons/simple-icons/Redux\";\r\nimport { Reactrouter } from \"@styled-icons/simple-icons/Reactrouter\";\r\nimport { Githubpages } from \"@styled-icons/simple-icons/Githubpages\";\r\nimport { Styledcomponents } from \"@styled-icons/simple-icons/Styledcomponents\";\r\n\r\nexport const StyledLibraryContainer = styled.div`\r\n    position: relative;\r\n    min-width: 240px;\r\n    min-height: 240px;\r\n    perspective: 600px;\r\n    cursor: pointer;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.medium}px){\r\n        margin: 0 auto 5px;\r\n        min-height: 75px;\r\n        transition: .7s ease-in-out;\r\n\r\n        &:hover{\r\n            min-height: 200px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledLibrary = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    transform-style: preserve-3d;\r\n    -webkit-transform-style: preserve-3d;\r\n    transition: all .7s ease-in-out;\r\n    background-color: ${({ theme }) => theme.colors.backgroundAddPrimary};\r\n    color: ${({ theme }) => theme.colors.colorPrimary};\r\n    border: 3px solid ${({ theme }) => theme.colors.buttonPrimary};\r\n    border-radius: 25px;\r\n\r\n    &:hover {\r\n        transform: rotateY(-180deg);\r\n    }\r\n`;\r\n\r\nexport const StyledFrontLibrary = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    backface-visibility: hidden;\r\n`;\r\n\r\nexport const StyledBackLibrabry = styled.div`\r\n    padding: 10px;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    backface-visibility: hidden;\r\n    transform: rotateY(180deg);\r\n`;\r\n\r\nexport const StyledLibraryName = styled.span`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    margin: 5px 0;\r\n `;\r\n\r\nexport const StyledLibraryInfo = styled.span`\r\n    font-size: 16px;\r\n    margin: 5px 0;\r\n    line-height: 24px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n        font-size: 14px;\r\n        line-height: 20px;\r\n    }\r\n`;\r\n\r\nexport const ReactIcon = styled(ReactLogo)`\r\n    width: 60px;\r\n    color: ${({ theme }) => theme.colors.buttonPrimary};\r\n`;\r\n\r\nexport const ReduxIcon = styled(Redux)`\r\n    width: 60px;\r\n    color: ${({ theme }) => theme.colors.buttonPrimary};\r\n`;\r\n\r\nexport const RouterIcon = styled(Reactrouter)`\r\n    width: 60px;\r\n    color: ${({ theme }) => theme.colors.buttonPrimary};\r\n`;\r\n\r\nexport const PagesIcon = styled(Githubpages)`\r\n    width: 60px;\r\n    color: ${({ theme }) => theme.colors.buttonPrimary};\r\n`;\r\n\r\nexport const StyledComponentsIcon = styled(Styledcomponents)`\r\n    width: 60px;\r\n    color: ${({ theme }) => theme.colors.buttonPrimary};\r\n`;","import { StyledLibraryName, StyledLibraryContainer, StyledLibrary, StyledFrontLibrary, StyledBackLibrabry } from \"./styled\";\r\n\r\nconst Library = ({ name, paragraph, icon }) => (\r\n    <StyledLibraryContainer>\r\n        <StyledLibrary>\r\n            <StyledFrontLibrary>{icon}</StyledFrontLibrary>\r\n            <StyledBackLibrabry>\r\n                <StyledLibraryName>{name}</StyledLibraryName>\r\n                {paragraph}\r\n            </StyledBackLibrabry>\r\n        </StyledLibrary>\r\n    </StyledLibraryContainer>\r\n);\r\n\r\nexport default Library;","import styled from \"styled-components\";\r\n\r\nexport const StyledLibrariesContainer = styled.div`\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n`;","import { StyledSection } from \"../../../common/Section/styled\";\r\nimport Library from \"../Library/Index\";\r\nimport { PagesIcon, ReactIcon, ReduxIcon, RouterIcon, StyledComponentsIcon, StyledLibraryInfo } from \"../Library/styled\";\r\nimport { StyledLibrariesContainer } from \"./styled\";\r\n\r\n\r\nconst AppInfo = () => {\r\n    return (\r\n        <StyledSection additionalSection>\r\n            <StyledLibrariesContainer>\r\n                <Library\r\n                    name={\"React\"}\r\n                    icon={<ReactIcon />}\r\n                    paragraph={\r\n                        <StyledLibraryInfo>\r\n                            A JavaScript library for building user interfaces.\r\n                            <br />In application:\r\n                            <br />&#9654; Components\r\n                            <br />&#9654; Properties\r\n                            <br />&#9654; useRef\r\n                        </StyledLibraryInfo>}\r\n                />\r\n                <Library\r\n                    name={\"React-Redux\"}\r\n                    icon={<ReduxIcon />}\r\n                    paragraph={\r\n                        <StyledLibraryInfo>\r\n                            A Predictable State Container for JS Apps.\r\n                            <br />In application:\r\n                            <br />&#9654; Reducers\r\n                            <br />&#9654; useSelector\r\n                            <br />&#9654; useDispatch\r\n                            <br />&#9654; Saga\r\n                        </StyledLibraryInfo>\r\n                    }\r\n                />\r\n                <Library\r\n                    name={\"React-Router\"}\r\n                    icon={<RouterIcon />}\r\n                    paragraph={\r\n                        <StyledLibraryInfo>\r\n                            A fully-featured client and server-side routing library for React.\r\n                            <br />In application:\r\n                            <br />&#9654; HashRouter\r\n                            <br />&#9654; Custom NavLink\r\n                        </StyledLibraryInfo>\r\n                    }\r\n                />\r\n                <Library\r\n                    name={\"Github Pages\"}\r\n                    icon={<PagesIcon />}\r\n                    paragraph={\r\n                        <StyledLibraryInfo>\r\n                            A static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub.\r\n                            <br />In application:\r\n                            <br />&#9654; Deployment\r\n                        </StyledLibraryInfo>\r\n                    }\r\n                />\r\n                <Library\r\n                    name={\"StyledComponents\"}\r\n                    icon={<StyledComponentsIcon />}\r\n                    paragraph={\r\n                        <StyledLibraryInfo>\r\n                            A library for React & ReactNative that allows to use component-level styles in applications.\r\n                            <br />In application:\r\n                            <br />&#9654; Styled components\r\n                            <br />&#9654; Theme & GlobalStyle\r\n                            <br />&#9654; Icons\r\n                        </StyledLibraryInfo>\r\n                    }\r\n                />\r\n            </StyledLibrariesContainer>\r\n        </StyledSection>\r\n    )\r\n};\r\n\r\nexport default AppInfo;","import Container from \"../../common/Container\";\r\nimport Section from \"../../common/Section\";\r\nimport Paragraph from \"../../common/Paragraph\";\r\nimport AppInfo from \"./AppInfo\";\r\nimport { StyledParagraphLink } from \"../../common/Paragraph/styled\";\r\n\r\n\r\nconst ApplicationInfo = () => {\r\n    return (\r\n        <Container>\r\n            <Section\r\n                title={\"Application Info\"}\r\n                body={\r\n                    <Paragraph\r\n                        description={\r\n                            <span>\r\n                                This Application was made during the <em>YouCode</em> course as one of the project. &#128187;\r\n                                <br />First project was simple and includes HTML, CSS and JavaScript. You can spot it <StyledParagraphLink href=\"https://patrick36212.github.io/to-do-list/\" target=\"_blank\">&#128073; here</StyledParagraphLink>\r\n                                <br />This is more extended version. It contains more advanced techniques learned by months of study and practise. &#128640;\r\n                                <br />Below are Open Source libraries used to make Tasks List application and its short info:\r\n                            </span>\r\n                        } />\r\n                }\r\n            />\r\n            <AppInfo />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ApplicationInfo;","export default __webpack_public_path__ + \"static/media/PK.4e00e35b.png\";","import styled from \"styled-components\"\r\n\r\nexport const StyledImg = styled.img`\r\n    max-height: 300px;\r\n    border-radius: 50% 0;\r\n    filter: drop-shadow(10px 2px 6px gray);\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n        max-height: 150px;\r\n        border-radius: 50%;\r\n    }\r\n`;\r\n\r\nexport const StyledAuthorInfo = styled.span`\r\n    padding: 5px 10px;\r\n    font-size: 20px;\r\n    white-space: break-spaces;\r\n    line-height: 32px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n        font-size: 14px;\r\n        line-height: 26px;\r\n    }\r\n`;\r\n\r\nexport const StyledAuthorContainer = styled.div`\r\n        display: grid;\r\n        grid-template-columns: 280px 1fr;\r\n        align-items: end;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}px) {\r\n        grid-template-columns: 1fr;\r\n        align-items: center;\r\n        justify-items: center;\r\n    }\r\n`;","import { StyledSection } from \"../../../common/Section/styled\";\r\nimport personalImage from \"./PK.png\";\r\nimport { StyledAuthorContainer, StyledAuthorInfo, StyledImg } from \"./styled\";\r\n\r\nconst Author = () => {\r\n    return (\r\n        <StyledSection additionalSection>\r\n            <StyledAuthorContainer>\r\n                <StyledImg src={personalImage} alt=\"Patryk Krawczyk - the author\" />\r\n                <StyledAuthorInfo>\r\n                    Patryk Krawczyk - Front-End Developer but also SOC Analyst.\r\n                    <br />CyberSecurity is my second passion.\r\n                    <br />Open to learn new technologies but also secur techniques.\r\n                </StyledAuthorInfo>\r\n            </StyledAuthorContainer>\r\n        </StyledSection>\r\n    );\r\n}\r\n\r\nexport default Author;","import Container from \"../../common/Container\";\r\nimport Paragraph from \"../../common/Paragraph\";\r\nimport Section from \"../../common/Section\";\r\nimport { StyledParagraphLink } from \"../../common/Paragraph/styled\";\r\nimport Author from \"./Author\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <Container>\r\n            <Section\r\n                title={\"About\"}\r\n                body={\r\n                    <Paragraph description={\r\n                        <span>I am a Front-End Developer out of love and passion. I am trying to spent every spare time to have more practise in it. &#9994;\r\n                            <br />Currently I am working at my <strong>Personal homepage, Tasks List Application & Layout for Brand Page.</strong>\r\n                            <br />Mean time I am still learning <strong>Redux, React Router and some Figma</strong> Sometimes I catch myself at checking the source code of applications or pages just to see how others made it. &#128064;\r\n                            <br />When I start to code, time doesn't metter &#9201; Sometimes I am spending the whole night just to make sure that submit button have look and properties I want &#128076;\r\n                            <br />Personally I am very polite and open person. I love to watch films & TV series. My last favourite is <q><em>The good doctor</em></q> &#128138;\r\n                            <br />Now you know something about me, if you want to know more about the application got to <StyledParagraphLink href=\"/react-task-list#/app_info\">Application Info</StyledParagraphLink> section. Contact info in in the Footer at the bottom of the page. That one below is me &#128071;\r\n                        </span>} />\r\n                }\r\n            />\r\n            <Author />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default About;","const breakpoints = {\r\n    medium: 768,\r\n    extraLarge: 1300,\r\n  };\r\n\r\nexport const light = {\r\n    breakpoints,\r\n    colors: {\r\n        backgroundPrimary: \"#ffffff\",\r\n        backgroundAddPrimary: \"#E6E6E6\",\r\n        colorPrimary: \"#000000\",\r\n        colorSeconadry: \"#DEDEDE\",\r\n        buttonPrimary: \"#008080\",\r\n        buttonMarkAsDone: \"#00B300\",\r\n        buttonDelete: \"#FF0000\", \r\n    },\r\n};\r\n\r\nexport const dark = {\r\n    breakpoints,\r\n    colors: {\r\n        backgroundPrimary: \"#292929\",\r\n        backgroundAddPrimary: \"#3D3D3D\",\r\n        colorPrimary: \"#F5F5F5\",\r\n        colorSeconadry: \"#292929\",\r\n        buttonPrimary: \"#008080\",\r\n        buttonMarkAsDone: \"#00B300\",\r\n        buttonDelete: \"#FF0000\",\r\n    },\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        background-color: ${({ theme }) => theme.colors.backgroundAddPrimary};\r\n        color: ${({theme}) => theme.colors.colorPrimary};\r\n        box-sizing: border-box;  \r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Lato', sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n`;","import React from \"react\";\r\nimport Header from \"./common/Header\";\r\nimport Footer from \"./common/Footer\"\r\nimport Tasks from \"./features/tasks/Tasks\";\r\nimport Menu from \"./common/Menu\";\r\nimport ApplicationInfo from \"./features/tools/ApplicationInfo\";\r\nimport About from \"./features/author/About\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsDarkTheme } from \"./common/ThemeSwitch/themeSlice\";\r\nimport { dark, light } from \"./theme\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\nimport { StyledNavLink } from \"./common/Menu/styled\";\r\n\r\nconst App = () => {\r\n    const isDarkTheme = useSelector(selectIsDarkTheme);\r\n\r\n    return (\r\n        <HashRouter>\r\n            <ThemeProvider theme={isDarkTheme ? dark : light}>\r\n                <GlobalStyle />\r\n                <Header\r\n                    title={<StyledNavLink to={\"/\"} header>Tasks List</StyledNavLink>}\r\n                    navigation={\r\n                        <Menu\r\n                            title={<StyledNavLink to={\"/\"} header>Tasks List</StyledNavLink>}\r\n                            home={<StyledNavLink to={\"/\"}>Home</StyledNavLink>}\r\n                            about={<StyledNavLink to={\"/author\"}>About</StyledNavLink>}\r\n                            tools={<StyledNavLink to={\"/app_info\"}>Application Info</StyledNavLink>}\r\n                        />\r\n                    }\r\n                />\r\n                <Switch>\r\n                    <Route path={\"/author\"} >\r\n                        <About />\r\n                    </Route>\r\n                    <Route path={\"/app_info\"}>\r\n                        <ApplicationInfo />\r\n                    </Route>\r\n                    <Route path={\"/\"} >\r\n                        <Tasks />\r\n                    </Route>\r\n                </Switch>\r\n                <Footer />\r\n            </ThemeProvider>\r\n        </HashRouter>\r\n    )\r\n};\r\n\r\nexport default App;","export const getExampleTasks = async () => {\r\n    const response = await fetch(\"/react-task-list/exampleTasks.json\");\r\n\r\n    if (!response.ok) {\r\n        new Error(response.statusText);\r\n    }\r\n\r\n    return await response.json();\r\n};","import { takeLatest, takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport { getExampleTasks } from './getExampleTasks';\r\nimport { setTasks, fetchExampleTasks, selectTasks } from './tasksSlice';\r\nimport { saveTasksInLocalStorage} from './tasksLocalStorage'\r\n\r\nfunction* fetchExampleTasksHandler() {\r\n    try {\r\n        const exampleTasks = yield call(getExampleTasks);\r\n        yield put(setTasks(exampleTasks))\r\n    } catch (error) {\r\n        yield call(alert, \"Something went wrong!\")\r\n    }\r\n};\r\n\r\nfunction* saveTasksInLocalStorageHandler() {\r\n    const tasks = yield select(selectTasks);\r\n    yield call(saveTasksInLocalStorage, tasks);\r\n};\r\n\r\nexport function* tasksSaga() {\r\n    yield takeLatest(fetchExampleTasks.type, fetchExampleTasksHandler);\r\n    yield takeEvery(\"*\", saveTasksInLocalStorageHandler);\r\n};","import { all } from 'redux-saga/effects';\r\nimport { tasksSaga } from './features/tasks/tasksSaga';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        tasksSaga(),\r\n    ])\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport tasksReducer from './features/tasks/tasksSlice';\r\nimport themeReducer from './common/ThemeSwitch/themeSlice';\r\nimport menuReducer from './common/Menu/menuSlice';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        tasks: tasksReducer,\r\n        theme: themeReducer,\r\n        menu: menuReducer,\r\n    },\r\n    middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}